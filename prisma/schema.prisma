// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rental {
  rental_id      Int             @id @default(autoincrement())
  rental_date    DateTime        @default(now())
  inventory_id   Int
  customer_id    Int
  return_date    DateTime
  staff_id       Int
  last_update    DateTime
  PlanifiedTasks PlanifiedTask[]
  customer       Customer        @relation(fields: [customer_id], references: [customer_id])

  @@map("rental")
}

model Customer {
  customer_id Int      @id @default(autoincrement())
  store_id    Int
  first_name  String
  last_name   String
  email       String
  address_id  Int
  active      Int
  create_date DateTime
  last_update DateTime
  timezone    String
  Rental      Rental[]

  @@map("customer")
}

enum MpaaRating {
  G
  PG
  PG_13 @map("PG-13")
  R
  NC_17 @map("NC-17")
}

model Film {
  film_id              Int        @id @default(autoincrement())
  title                String
  description          String
  release_year         Int
  language_id          Int
  original_language_id Int?
  rental_duration      Int
  rental_rate          Float
  length               Int
  replacement_cost     Float
  rating               MpaaRating @default(G)
  last_update          DateTime

  @@map("film")
}

model PlanifiedTask {
  id        Int      @id @default(autoincrement())
  type      String
  rental_id Int
  date      DateTime
  status    String?  @default("PENDING")

  Rental Rental @relation(fields: [rental_id], references: [rental_id])

  @@map("planified_task")
}
